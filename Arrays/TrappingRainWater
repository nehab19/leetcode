
/** leetcode link : https://leetcode.com/problems/trapping-rain-water/ **/

class Solution {
    public int trap(int[] height) {
        int left = 0;
        int right = height.length - 1;
        int leftMax = height[left];
        int rightMax = height[right];
        int waterToBeFilled = 0;

        while (left < right) {
            if (leftMax < rightMax) {
                /*
                 * if right is bigger than left then we would increase left as water will come
                 * where the height is min and we would increase left
                 */
                left++;
                /*
                 * now calculate which is bigger which will tell us how much water can be
                 * trapped
                 */
                leftMax = Math.max(leftMax, height[left]);
                waterToBeFilled = waterToBeFilled + (leftMax - height[left]);
            } else {
                /*
                 * so that we can traverse now from right to left to trap water as left is
                 * already bigger
                 */
                right--;
                rightMax = Math.max(rightMax, height[right]);
                waterToBeFilled = waterToBeFilled + (rightMax - height[right]);

            }
        }
        return waterToBeFilled;

    }
}
