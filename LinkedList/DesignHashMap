/** leetcode link : https://leetcode.com/problems/design-hashmap/ **/

public class DesignHashMap {
    static class Node {
        int key;
        int value;
        Node next;

        Node(int key, int value) {
            this.key = key;
            this.value = value;
            this.next = null;
        }
    }

    static class MyHashMap {

        private Node[] map;

        public MyHashMap() {
            map = new Node[1000];
            for (int i = 0; i < 1000; i++) {
                map[i] = new Node(-1, -1);
            }
        }

        public void put(int key, int value) {
            int hash = key % 1000;
            Node current = map[hash];
            while (current.next != null) {
                if (current.next.key == key) {
                    // update the value
                    current.next.value = value;
                    return;
                }
                current = current.next;
            }
            current.next = new Node(key, value);
        }

        public int get(int key) {
            int hash = key % 1000;
            Node current = map[hash].next;

            while (current != null) {
                if (current.key == key) {
                    return current.value;
                }
                current = current.next;
            }
            return -1;
        }

        public void remove(int key) {
            int hash = key % 1000;
            Node current = map[hash];

            while (current.next != null) {
                if (current.next.key == key) {
                    current.next = current.next.next;
                    return;
                }
                current = current.next;
            }
        }
    }
}
